{
  "version": 3,
  "sources": ["../../../app/routes/_index.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/_index.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/_index.tsx\");\n}\n// REMIX HMR END\n\nimport { Link } from \"@remix-run/react\";\nimport splashImageHoriz from \"public/images/psari_transparent.png\";\nimport splashImageVert from \"public/images/psari_transparent_rotated.png\";\nimport stylesUrl from \"./../css/index.css\";\nexport const links = () => [{\n  rel: \"stylesheet\",\n  href: stylesUrl\n}];\nexport const meta = () => {\n  return [{\n    name: \"description\",\n    content: \"Expressionistic artwork by Seanne Buoy in a variety of mediums.\"\n  }, {\n    title: \"Seanne Buoy | Home\"\n  }];\n};\nexport default function Index() {\n  return <div>\n      <section aria-label=\"Artwork by Seanne Buoy\" className=\"splash-image-wrapper\">\n        <Link to=\"/work\">\n          <img src={splashImageVert} alt=\"Select the drawing of the fish to view the artist's body of work.\" className=\"splash-image--vertical\" />\n\n          <img src={splashImageHoriz} alt=\"Select the drawing of the fish to view the artist's body of work.\" className=\"splash-image--horizontal\" />\n\n        </Link>\n      </section>\n    </div>;\n}\n_c = Index;\nvar _c;\n$RefreshReg$(_c, \"Index\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;AAuCU;AAtCV,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,4BAA8B,EAAE;AAAA,EACzE;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAON,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAuB;AACzB;AAOO,IAAM,QAAQ,MAAM,CAAC;AAAA,EAC1B,KAAK;AAAA,EACL,MAAM;AACR,CAAC;AACM,IAAM,OAAO,MAAM;AACxB,SAAO,CAAC;AAAA,IACN,MAAM;AAAA,IACN,SAAS;AAAA,EACX,GAAG;AAAA,IACD,OAAO;AAAA,EACT,CAAC;AACH;AACe,SAAR,QAAyB;AAC9B,SAAO,mDAAC,SACJ,6DAAC,aAAQ,cAAW,0BAAyB,WAAU,wBACrD,6DAAC,QAAK,IAAG,SACP;AAAA,uDAAC,SAAI,KAAK,mCAAiB,KAAI,qEAAoE,WAAU,4BAA7G;AAAA;AAAA;AAAA;AAAA,WAAsI;AAAA,IAEtI,mDAAC,SAAI,KAAK,2BAAkB,KAAI,qEAAoE,WAAU,8BAA9G;AAAA;AAAA;AAAA;AAAA,WAAyI;AAAA,OAH3I;AAAA;AAAA;AAAA;AAAA,SAKA,KANF;AAAA;AAAA;AAAA;AAAA,SAOA,KARG;AAAA;AAAA;AAAA;AAAA,SASL;AACJ;AACA,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,OAAO;AAExB,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
