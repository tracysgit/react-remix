{
  "version": 3,
  "sources": ["../../../app/routes/features.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/features.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/features.tsx\");\n  import.meta.hot.lastModified = \"1701694943508.2375\";\n}\n// REMIX HMR END\n\nexport default function FeaturesRoute() {\n  return <>\n      <h2>Features</h2>\n      <ul>\n        <li>Built with React-Remix</li>\n        <li>Static JSON data file of artwork for easy maintenance</li>\n        <li>Parameterized routing (work/pieceId)</li>\n        <li>Unique &lt;head&gt; content on each page</li>\n        <li>Built with accessibility in mind (color contrast, aria attributes, focus rings, headline hierarchy, etc.)</li>\n        <li>Uses webp and jpg images</li>\n        <li>Optimized for light mode but also handles dark mode</li>\n      </ul>\n      <br />\n      <h2>Future Improvements</h2>\n      <ul style={{\n      marginBottom: \"100px\"\n    }}>\n        <li>Improve accessibility of mobile menu</li> \n        <li>Add JSON data to a database</li>        \n        <li>Provide an interface to add artwork via the web</li> \n        <li>Image compression/optimizer or lazy load</li>   \n      </ul>\n    </>;\n}\n_c = FeaturesRoute;\nvar _c;\n$RefreshReg$(_c, \"FeaturesRoute\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;AAqBS;AApBT,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,8BAAgC,EAAE;AAAA,EAC3E;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAON,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAyB;AACzB,cAAY,IAAI,eAAe;AACjC;AAGe,SAAR,gBAAiC;AACtC,SAAO,sFACH;AAAA,uDAAC,QAAG,wBAAJ;AAAA;AAAA;AAAA;AAAA,WAAY;AAAA,IACZ,mDAAC,QACC;AAAA,yDAAC,QAAG,sCAAJ;AAAA;AAAA;AAAA;AAAA,aAA0B;AAAA,MAC1B,mDAAC,QAAG,qEAAJ;AAAA;AAAA;AAAA;AAAA,aAAyD;AAAA,MACzD,mDAAC,QAAG,oDAAJ;AAAA;AAAA;AAAA;AAAA,aAAwC;AAAA,MACxC,mDAAC,QAAG,kDAAJ;AAAA;AAAA;AAAA;AAAA,aAA4C;AAAA,MAC5C,mDAAC,QAAG,yHAAJ;AAAA;AAAA;AAAA;AAAA,aAA6G;AAAA,MAC7G,mDAAC,QAAG,wCAAJ;AAAA;AAAA;AAAA;AAAA,aAA4B;AAAA,MAC5B,mDAAC,QAAG,mEAAJ;AAAA;AAAA;AAAA;AAAA,aAAuD;AAAA,SAPzD;AAAA;AAAA;AAAA;AAAA,WAQA;AAAA,IACA,mDAAC,UAAD;AAAA;AAAA;AAAA;AAAA,WAAI;AAAA,IACJ,mDAAC,QAAG,mCAAJ;AAAA;AAAA;AAAA;AAAA,WAAuB;AAAA,IACvB,mDAAC,QAAG,OAAO;AAAA,MACX,cAAc;AAAA,IAChB,GACI;AAAA,yDAAC,QAAG,oDAAJ;AAAA;AAAA;AAAA;AAAA,aAAwC;AAAA,MACxC,mDAAC,QAAG,2CAAJ;AAAA;AAAA;AAAA;AAAA,aAA+B;AAAA,MAC/B,mDAAC,QAAG,+DAAJ;AAAA;AAAA;AAAA;AAAA,aAAmD;AAAA,MACnD,mDAAC,QAAG,wDAAJ;AAAA;AAAA;AAAA;AAAA,aAA4C;AAAA,SAN9C;AAAA;AAAA;AAAA;AAAA,WAOA;AAAA,OApBG;AAAA;AAAA;AAAA;AAAA,SAqBL;AACJ;AACA,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,eAAe;AAEhC,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
